apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: nginx
  name: nginx
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      volumes:
        - name: test
          flexVolume:
            driver: "spiffe.io/flex"
            fsType: "ext4"
            options:
              sasha: "a"
              hello: "b"
        - name: certs
          secret:
            secretName: spiffe-nginx-certs
        - name: roots
          secret:
            secretName: spiffe-nginx-roots
        - name: config
          configMap:
            name: nginx
      containers:
      - image: nginx:1.9.1
        name: nginx
        ports:
        - containerPort: 443
          protocol: TCP
        volumeMounts:
        - mountPath: /var/lib/spiffe/test
          name: test
        - mountPath: /var/lib/spiffe/certs
          name: certs
        - mountPath: /var/lib/spiffe/roots
          name: roots          
        - mountPath: /etc/nginx/conf.d
          name: config
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: kube-system
  labels:
    app: nginx
spec:
  ports:
  - name: nginx
    port: 443
  selector:
    app: nginx
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: kube-system
  name: nginx
data:
  default.conf: |
    server {
        listen       443 ssl;
        server_name  nginx.kube-system.svc.cluster.local;
        ssl_certificate         /var/lib/spiffe/certs/nginx.cert;
        ssl_certificate_key     /var/lib/spiffe/certs/nginx.pem;
        ssl_client_certificate  /var/lib/spiffe/roots/certauthority.kube-system.svc.cluster.local.pem;
        ssl_verify_client       on;
        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers         HIGH:!aNULL:!MD5;
        location / {
            return 200 'hello, SPIFFE!';
        }
    }
